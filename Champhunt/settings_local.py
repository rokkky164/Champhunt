"""
Django settings for WallStreet project.
Generated by 'django-admin startproject' using Django 3.0.1.
For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""
from decimal import Decimal
from datetime import datetime

# from decouple import config
import os

from payments.constants import *

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "ce4juzp8!d@lgthqc^ip$t@@!!p#8^etlltd=pb^gqs=rh3=&a"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    "127.0.0.1",
    "localhost",
    "www.cricktrade.com",
    "demo.cricktrade.com",
    "market.cricktrade.com",
    "wallstreet-env.eba-ie3ndxmm.us-west-1.elasticbeanstalk.com",
    "wallstreet-env-1.us-west-1.elasticbeanstalk.com",
    "172.31.24.176",
    "172.31.0.101",
    "172.31.19.41",
    "awseb-awseb-1mgsyw9ud4389-1027235852.us-west-1.elb.amazonaws.com",
    "54.183.10.17",
    "54.183.92.44",
    "54.241.175.75",
]

DEFAULT_LOAN_AMOUNT = Decimal(1000.00)
BOTTOMLINE_CASH = Decimal(1000.00)
MAX_LOAN_ISSUE = 1
RATE_OF_INTEREST = Decimal(0.15)  # 15%
START_TIME = datetime(2019, 4, 12, 4, 00, 0)
STOP_TIME = datetime(2022, 5, 5, 2, 00, 0)


# Application definition

INSTALLED_APPS = [
    "channels",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "session.apps.SessionConfig",
    "django.contrib.humanize",
    "djoser",
    "rest_framework",
    "rest_framework.authtoken",
    "djangochannelsrestframework",
    "django.contrib.sites",
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.google",
    "crispy_forms",
    # added apps
    "accounts",
    "market",
    "stocks",
    "real_time_cmp",
    "pwa",
    "chat_messages",
    "virtualcoins",
    "payments",
    "rest_api",
]

SITE_ID = 1


REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework.authentication.TokenAuthentication",
        "rest_framework.authentication.SessionAuthentication",
    ),
}

# Replace the built-in values
AUTH_USER_MODEL = "accounts.User"
LOGIN_URL = "/accounts/login/"
LOGIN_URL_REDIRECT = "/"
LOGOUT_REDIRECT_URL = "accounts/login/"
LOGOUT_URL = "/logout/"

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "WallStreet.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

CHANNEL_LAYERS = {
    "default": {
        "CONFIG": {
            "hosts": [("localhost", "6379")],
            # "hosts": [('wallstreet-redis.eubzmj.ng.0001.usw1.cache.amazonaws.com','6379')],
        },
        "BACKEND": "channels_redis.core.RedisChannelLayer",
    },
}

# CACHES = {
#   'default': {
#     'BACKEND': 'django_redis.cache.RedisCache',
#     'LOCATION': 'redis://wallstreet-redis.eubzmj.clustercfg.usw1.cache.amazonaws.com/0',
#     'OPTIONS': {
#       'REDIS_CLIENT_CLASS': 'rediscluster.RedisCluster',
#       'CONNECTION_POOL_CLASS': 'rediscluster.connection.ClusterConnectionPool',
#       'CONNECTION_POOL_KWARGS': {
#         'skip_full_coverage_check': True # AWS ElasticCache has disabled CONFIG commands
#       }
#     }
#   }
# }

WSGI_APPLICATION = "WallStreet.wsgi.application"
ASGI_APPLICATION = "WallStreet.routing.application"


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql_psycopg2",
        "NAME": "cricktrade",
        "USER": "postgres",
        "PASSWORD": "pwd",
        "HOST": "localhost",
    }
}
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME': 'wallstreet',
#         'USER': 'postgres',
#         'PASSWORD': 'Champ2424',
#         'HOST': 'wallstreet.ciqodeqxwwle.us-west-1.rds.amazonaws.com',
#         'PORT': '5432'
#     }
# }
# if 'RDS_DB_NAME' in os.environ:
#    DATABASES = {
#        'default': {
#           'ENGINE': 'django.db.backends.postgresql_psycopg2',
#            'NAME': os.environ['RDS_DB_NAME'],
#            'USER': os.environ['RDS_USERNAME'],
#            'PASSWORD': os.environ['RDS_PASSWORD'],
#            'HOST': os.environ['RDS_HOSTNAME'],
#            'PORT': os.environ['RDS_PORT'],
#        }
#    }
# else:
#    DATABASES = {
#        'default': {
#            'ENGINE': 'django.db.backends.postgresql_psycopg2',
#            'NAME': 'ebdb',
#            'USER': 'postgres',
#            'PASSWORD': 'Champ2424',
#            'HOST': 'aa1rgau2058nibn.ciqodeqxwwle.us-west-1.rds.amazonaws.com',
#            'PORT':'5432'
#        }
#    }


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",},
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Asia/Calcutta"

USE_I18N = True

USE_L10N = True

USE_TZ = True

# if DEBUG:
#         STATICFILES_DIRS = [
#             os.path.join(BASE_DIR, 'static')
#        ]
# else:
#     STATIC_ROOT = os.path.join(BASE_DIR, 'static')
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = "/static/"

STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]

# STATIC_ROOT = os.path.join(BASE_DIR, "static_cdn", "static_root")
STATIC_ROOT = os.path.join(BASE_DIR, "..", "www", "static")

# STATIC_ROOT = 'static'

MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "static_cdn", "media_root")

LOGIN_REDIRECT_URL = "/market/trading-dashboard/"


######################  PWA Settings ##############################################
PWA_SERVICE_WORKER_PATH = os.path.join(BASE_DIR, "static/js", "serviceworker.js")

PWA_APP_NAME = "Cricket Stock Market"
PWA_APP_DESCRIPTION = "Cricket Stock Market PWA"
PWA_APP_THEME_COLOR = "#000000"
PWA_APP_BACKGROUND_COLOR = "#ffffff"
PWA_APP_DISPLAY = "standalone"
PWA_APP_SCOPE = "/"
PWA_APP_ORIENTATION = "any"
PWA_APP_START_URL = "/"
PWA_APP_STATUS_BAR_COLOR = "default"
PWA_APP_ICONS = [{"src": "static/images/icon-160x160.png", "sizes": "160x160"}]
PWA_APP_ICONS_APPLE = [{"src": "static/images/icon-160x160.png", "sizes": "160x160"}]
PWA_APP_SPLASH_SCREEN = [
    {
        "src": "static/images/icon.png",
        "media": "(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)",
    }
]
PWA_APP_DIR = "ltr"
PWA_APP_LANG = "en-US"
##################################################################
